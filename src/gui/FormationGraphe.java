/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import connexion.Connexion;
import java.awt.Color;
import java.awt.Font;
import java.awt.GradientPaint;
import javax.swing.JFrame;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.CategoryDataset;
import services.InscriptionFormationService;

/**
 *
 * @author GIGA STORE
 */
public class FormationGraphe extends javax.swing.JInternalFrame {
     private Connexion connexion;
    /**
     * Creates new form FormationGraphe
     */
    public FormationGraphe() {
        initComponents();
         
  // Création et ajout du graphique
        ChartPanel chartPanel = new ChartPanel(createChart());
        chartPanel.setPreferredSize(new java.awt.Dimension(800, 600)); // Taille initiale
        
        // Ajout du graphique au JPanel existant
        ChartPanel.setLayout(new java.awt.BorderLayout());
        ChartPanel.add(chartPanel, java.awt.BorderLayout.CENTER);
        
       
        setVisible(true);
         pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ChartPanel = new javax.swing.JPanel();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);

        javax.swing.GroupLayout ChartPanelLayout = new javax.swing.GroupLayout(ChartPanel);
        ChartPanel.setLayout(ChartPanelLayout);
        ChartPanelLayout.setHorizontalGroup(
            ChartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 959, Short.MAX_VALUE)
        );
        ChartPanelLayout.setVerticalGroup(
            ChartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 546, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ChartPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ChartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ChartPanel;
    // End of variables declaration//GEN-END:variables

    private JFreeChart createChart() {
         InscriptionFormationService service = new InscriptionFormationService();
        CategoryDataset dataset = service.createDataset();
          if (dataset == null) {
            throw new IllegalStateException("Erreur: le dataset est vide ou non initialisé.");
        }

        // Création du graphique
        JFreeChart chart = ChartFactory.createBarChart(
               "Nombre de participants par formation", // Titre mis à jour
                "Formation",
                "Nombre de participants",
                dataset,
                PlotOrientation.VERTICAL,
                true,
                true,
                false
        );
 // Personnalisation du graphique
        CategoryPlot plot = chart.getCategoryPlot();
        plot.setBackgroundPaint(Color.LIGHT_GRAY);
        plot.setRangeGridlinePaint(Color.WHITE);

        BarRenderer renderer = (BarRenderer) plot.getRenderer();
        renderer.setSeriesPaint(0, new GradientPaint(0.0f, 0.0f, Color.BLUE, 0.0f, 0.0f, Color.CYAN));

        // Modification de la police
        Font font = new Font("SansSerif", Font.BOLD, 14);
        plot.getDomainAxis().setTickLabelFont(font);
        plot.getRangeAxis().setTickLabelFont(font);
        chart.getTitle().setFont(new Font("SansSerif", Font.BOLD, 18));

        return chart;  // Retourner le graphique après l'avoir configuré
         //To change body of generated methods, choose Tools | Templates.
    }
}
